#!/bin/bash

# Constantes
MIRROR_URL="https://mirror.thekinrar.fr"
REPO_URL="$MIRROR_URL/archlinux/\$repo/os/\$arch"
CORE_REPO_URL=$(echo $REPO_URL | sed "s|\$repo|core|")
COMMUNITY_REPO_URL=$(echo $REPO_URL | sed "s|\$repo|community|")
PKG_DEST_DIR="/var/cache/pacman/pkg"

# Fonctions d'affichage
GREEN='\033[0;32m'
BLUE='\033[0;34m'
RED='\033[0;31m'
NC='\033[0m'

print_info() {
    echo -e "${BLUE}[INFO] $1${NC}"
}

print_success() {
    echo -e "${GREEN}[SUCCESS] $1${NC}"
}

print_error() {
    echo -e "${RED}[ERROR] $1${NC}"
}

# Fonction pour télécharger un package
download_package() {
    package=$1
    repo=$2
    url=$(echo $repo | sed "s|\$arch|$(uname -m)|; s|\$repo|$package|")
    filename=$(echo $url | awk -F '/' '{print $NF}')
    if [ -e $PKG_DEST_DIR/$filename ]; then
        print_info "Package $package already downloaded"
    else
        print_info "Downloading $package from $repo ..."
        wget "$MIRROR_URL$url"
        if [ $? -ne 0 ]; then
            print_error "Failed to download $package from $repo"
        else
            mv $filename $PKG_DEST_DIR
            print_success "$package downloaded successfully"
        fi
    fi
}

# Fonction pour installer un package
install_package() {
    package=$1
    repo=$2
    download_package $package $repo
    if [ $? -ne 0 ]; then
        print_error "Failed to download $package from $repo"
        exit 1
    fi
    print_info "Installing $package ..."
    sudo pacman -U --noconfirm $PKG_DEST_DIR/$package*.pkg.tar.zst
    if [ $? -ne 0 ]; then
        print_error "Failed to install $package"
    else
        print_success "$package installed successfully"
    fi
}

# Fonction pour supprimer un package
remove_package() {
    package=$1
    print_info "Removing $package ..."
    sudo pacman -Rs --noconfirm $package
    if [ $? -ne 0 ]; then
        print_error "Failed to remove $package"
    else
        print_success "$package removed successfully"
    fi
}

# Fonction pour mettre à jour les packages
update_packages() {
    print_info "Updating packages ..."
    sudo pacman -Syu --noconfirm
    if [ $? -ne 0 ]; then
        print_error "Failed to update packages"
    else
        print_success "Packages updated successfully"
    fi
}

# Analyse des arguments de la ligne de commande
if [ $# -lt 2 ]; then
    print_error "Usage: $0 <command> <package>"
    exit 1
fi

command=$1
package=$2

case $command in
    "install")
        install_package $package $CORE_REPO_URL
        ;;
    "remove")
        remove_package $package
        ;;
    "update")
        update_packages
        ;;
    *)
        print_error "Unknown command: $command"
        exit 1
        ;;
esac
