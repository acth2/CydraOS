#!/bin/bash

ProgName=$(basename $0)


if [ $(id -u) -ne 0 ]; then
   echo "Erreur: CydraManagers doit etre lancé en tant qu'administrateur !"
   echo "       \ Correction: sudo cydramanager"
   exit 1
fi

sub_help(){
    echo "Usage: $ProgName [options]"
    echo "Liste des commandes disponibles"
    echo "    -V  = --version  = Version du logiciel"
    echo "    -Vm = --moreinfo = Affiche plus d'information a propos du gestionnaire de packets"
    echo "    -v  = --version  = Affiche la version du gestionnaire de packet"
    echo "    -u  = --update   = Fais la mise a jour du systeme"
    echo "    -i  = --install  = Installe un logiciel de votre choix"
    echo "    -h  = --help     = Ouvre un menu d'aide"
    echo ""
    echo "    --------------------------------------------------------------------- OPTIONS"
    echo ""
    echo "    -v  = --verbose  = Permet d affiché d'autre informations "
    echo "          \_ UTILISATION: Se combine avec d'autres sub EXEMPLE: cydramanager -uv "
    echo
    echo
}

update(){
        cache="/etc/cydramanager/cache"
        data="/etc/cydramanager"
        mirror="http://ftp.u-strasbg.fr/linux/distributions/archlinux/core/os/x86_64/"

        shopt -s nullglob
        shopt -s dotglob

        mkdir $data
        mkdir $cache

        echo -n ":: Récupération des données"
	sudo wget archlinux.datagr.am/core/os/x86_64/core.db.tar.gz -q -P /etc/cydramanager/updatedata        
        echo " [FAIS]"
	echo "            |"
        echo "             - core"
        echo -n ":: Extraction en cours.."
        sudo tar xf /etc/cydramanager/updatedata/core.db.tar.gz --directory /etc/cydramanager/updatedata > /dev/null 2>&1
        echo " [FAIS]"
	#clear
        #echo ":: Récupération des données  [FAIS]"
        #echo "            |"
        #echo "             - core"
        #echo ":: Extraction en cours... [FAIS]"
        #echo ":: Vérification en cours"
        start
}

installupdate(){

        #VARIABLES

        cache="/etc/cydramanager/cache"
        data="/etc/cydramanager"
        mirror="http://ftp.u-strasbg.fr/linux/distributions/archlinux/core/os/x86_64/"

        usrUpdated="/etc/cydramanager/cache/usr"
        mntUpdated="/etc/cydramanager/cache/mnt"
        rootUpdated="/etc/cydramanager/cache/root"
        runUpdated="/etc/cydramanager/cache/run"
        sbinUpdated="/etc/cydramanager/cache/sbin"
        srcUpdated="/etc/cydramanager/cache/srv"
        procUpdated="/etc/cydramanager/cache/proc"
        sysUpdated="/etc/cydramanager/cache/sys"
        tmpUpdated="/etc/cydramanager/cache/tmp"
        varUpdated="/etc/cydramanager/cache/var"
        binUpdated="/etc/cydramanager/cache/bin"
        bootUpdated="/etc/cydramanager/cache/boot"
        devUpdated="/etc/cydramanager/cache/dev"
        etcUpdated="/etc/cydramanager/cache/etc"

        #TELECHARGEMENT

       if [ "$debug" = "yes" ]; then
                wget -r $mirror -P $cache
        else
                wget -r $mirror -q -P $cache
        fi

        #PREPARATION

        mv    $cache/ftp.u-strasbg.fr/linux/distributions/archlinux/core/os/x86_64/* $cache
        rm -f "$cache/index.html"
        rm -f $cache/'index.html?C=D;O=A'
        rm -f $cache/'index.html?C=D;O=D'
        rm -f $cache/'index.html?C=M;O=A'
        rm -f $cache/'index.html?C=M;O=D'
        rm -f $cache/'index.html?C=N;O=A'
        rm -f $cache/'index.html?C=N;O=D'
        rm -f $cache/'index.html?C=S;O=A'
        rm -f $cache/'index.html?C=S;O=D'
        rm -f $cache/'core.db'
        rm -f $cache/'core.db.tar.gz'
        rm -f $cache/'core.db.tar.gz.old'
        rm -f $cache/'core.files'
        rm -f $cache/'core.files.tar.gz'
        rm -f $cache/'core.files.tar.gz.old'
        rm -f $cache/'core.links.tar.gz'
        rm -f $cache/'archlinux-keyring-20221220-1-any.pkg.tar.zst'
        rm -f $cache/*.pkg.tar.zst.sig

        #INSTALLATION
        echo -n "        \_ Installation des mises a jour  "
        for f in /etc/cydramanager/cache/*.pkg.tar.zst; do tar xf "$f" -C $cache; done > /dev/null 2>&1
        rm -f $cache/*.pkg.tar.zst
	echo -n " [======="

        cp -r $mntUpdated  /mnt   > /dev/null 2>&1
        cp -r $usrUpdated  /usr   > /dev/null 2>&1
        echo -n "==="
        cp -r $rootUpdated /root  > /dev/null 2>&1
        cp -r $runUpdated  /run   > /dev/null 2>&1
        echo -n "==="
	cp -r $sbinUpdated /sbin  > /dev/null 2>&1
        cp -r $srcUpdated  /src   > /dev/null 2>&1
        echo -n "==="
	cp -r $procUpdated /proc  > /dev/null 2>&1
        cp -r $sysUpdated  /sys   > /dev/null 2>&1
        echo -n "==="
	cp -r $tmpUpdated  /tmp   > /dev/null 2>&1
        cp -r $varUpdated  /var   > /dev/null 2>&1
        echo -n "==="
	cp -r $binUpdated  /bin   > /dev/null 2>&1
        cp -r $bootUpdated /boot  > /dev/null 2>&1
        echo -n "==="
	cp -r $devUpdated  /dev   > /dev/null 2>&1
        cp -r $etcUpdated  /etc   > /dev/null 2>&1
	echo "===]"


        #NETTOYAGE
        echo -n ":: Nettoyage.."
	rm -rf $data
	echo " [FAIS]"
        echo ":: Mise a jour terminé !"
        echo
}

start(){

        echo -n -e "\033[0;36mVoulez vous procédé a l'installation? ---------- [O|N] \e[0m"
        read process

        if [ "$process" = "o" ]; then
                echo ":: Installation en cours.. "
                 echo -n "       \_ Telechargement des informations"
		echo " [FAIS] -- <Finalisation>"
                installupdate
        else
                echo -e "\e[31m:: Annulation \e[0m"
                exit 0
        fi
}

send_to_help(){
        echo "Vous n'utilisez pas la commande correctement"
        echo "             Usage: 'cydramanager --help'"
        echo
}

more_info(){
echo "Download command: wget"
echo "Mirror: http://ftp.u-strasbg.fr/linux/distributions/archlinux/ (WARNING: THIS IS NOT A ARCH DISTRIBUTION !)"
echo "Version: V01 Beta Test"
echo "Author: AcTh2"
echo "Principal OS: CydraProject"
echo ""
}

sub_version(){
echo "'\'        CydraManagers     '\'"
echo " '\'         V01 - BETA       '\'"
echo "  '\'                          '\'"
echo "   '\'                          '\'"
echo "    '\'                          '\'"
echo "     '\'   Create by AcTh2        '\'"
}

install(){
   echo "============"
   echo "1] Install"
   echo "2] Remove"
   echo "3] Exit"
   echo "============"
   echo -n "Type here: "

	 read installpg

	if [ "$installpg" == "1" ];
	then
		echo ":: Recuperation des informations"
		echo "Veuillez entre le nom de votre logiciel:"
			read software	
		installProg
	fi

	if [ "$installpg" == "2" ];
	then
		echo "::Initialisation du programme d'deinstallation"
	fi

	if [ "$installpg" == "3" ];
	then
		echo "Arret.."
		exit 0
	fi
}

installProg(){


        usrUpdated="/etc/cydramanager/cache/usr"
        mntUpdated="/etc/cydramanager/cache/mnt"
        rootUpdated="/etc/cydramanager/cache/root"
        runUpdated="/etc/cydramanager/cache/run"
        sbinUpdated="/etc/cydramanager/cache/sbin"
        srcUpdated="/etc/cydramanager/cache/srv"
        procUpdated="/etc/cydramanager/cache/proc"
        sysUpdated="/etc/cydramanager/cache/sys"
        tmpUpdated="/etc/cydramanager/cache/tmp"
        varUpdated="/etc/cydramanager/cache/var"
        binUpdated="/etc/cydramanager/cache/bin"
        bootUpdated="/etc/cydramanager/cache/boot"
        devUpdated="/etc/cydramanager/cache/dev"
        etcUpdated="/etc/cydramanager/cache/etc"


	#PREPARATION
	sudo mkdir /etc/cydramanager/
	sudo mkdir /etc/cydramanager/updatedata
	sudo mkdir /etc/cydramanager/cache

	echo "Installation des donnes"
	echo -n "   |_ core "
	sudo wget archlinux.datagr.am/core/os/x86_64/core.db.tar.gz -q -P /etc/cydramanager/updatedata
	tar  xf   /etc/cydramanager/updatedata/core.db.tar.gz --directory /etc/cydramanager/updatedata > /dev/null 2>&1
	echo "[FAIS]"
	echo -n "   |_ community "
	sudo wget archlinux.datagr.am/community/os/x86_64/community.db.tar.gz -q -P /etc/cydramanager/updatedata
	tar  xf   /etc/cydramanager/updatedata/community.db.tar.gz --directory /etc/cydramanager/updatedata > /dev/null 2>&1
	echo "[FAIS]"
	prog=$(grep -r -l $software"-" /etc/cydramanager/updatedata) progVersion=$(sed -n 11p $prog)
	echo -n "Nom Programme: "
	echo -n "$software"
	echo -n " Version Programme: "
	echo -n "$progVersion"
	echo

	echo ":: Installation en cours.."

	#CORE VERIFICATION

	wget http://ftp.u-strasbg.fr/linux/distributions/archlinux/core/os/x86_64/$software"-"$progVersion"-"x86_64".pkg.tar.zst" -q -P /etc/cydramanager/cache
	wget http://ftp.u-strasbg.fr/linux/distributions/archlinux/core/os/x86_64/$software"-"$progVersion"-"any".pkg.tar.zst" -q -P /etc/cydramanager/cache
	wget http://ftp.u-strasbg.fr/linux/distributions/archlinux/core/os/x86_64/$software"-"$progVersion"-"any".pkg.tar.xz" -q -P /etc/cydramanager/cache
	wget http://ftp.u-strasbg.fr/linux/distributions/archlinux/core/os/x86_64/$software"-"$progVersion"-"x86_64".pkg.tar.xz" -q -P /etc/cydramanager/cache

	#COMMUNITY VERIFICATION

	wget http://ftp.u-strasbg.fr/linux/distributions/archlinux/community/os/x86_64/$software"-"$progVersion"-"x86_64".pkg.tar.zst" -q -P /etc/cydramanager/cache
	wget http://ftp.u-strasbg.fr/linux/distributions/archlinux/community/os/x86_64/$software"-"$progVersion"-"any".pkg.tar.zst" -q -P /etc/cydramanager/cache
	wget http://ftp.u-strasbg.fr/linux/distributions/archlinux/community/os/x86_64/$software"-"$progVersion"-"any".pkg.tar.xz" -q  -P /etc/cydramanager/cache
	wget http://ftp.u-strasbg.fr/linux/distributions/archlinux/community/os/x86_64/$software"-"$progVersion"-"x86_64".pkg.tar.xz" -q -P /etc/cydramanager/cache

	#INSTALLATION

	
        cache="/etc/cydramanager/cache"
        data="/etc/cydramanager"
        mirror="http://ftp.u-strasbg.fr/linux/distributions/archlinux/core/os/x86_64/"

        for f in /etc/cydramanager/cache/*.pkg.tar.zst; do tar xf "$f" -C $cache; done > /dev/null 2>&1



	mv -i /etc/cydramanager/cache/usr/share/* /usr/share/*
	mv -i /etc/cydramanager/cache/usr/bin/* /usr/bin/*
	 

    #  	cp -r $mntUpdated  /mnt   > /dev/null 2>&1
   #     cp -r $usrUpdated  /usr   > /dev/null 2>&1
  #      cp -r $rootUpdated /root  > /dev/null 2>&1
 #       cp -r $runUpdated  /run   > /dev/null 2>&1
#	cp -r $sbinUpdated /sbin  > /dev/null 2>&1
 #       cp -r $srcUpdated  /src   > /dev/null 2>&1
#	cp -r $procUpdated /proc  > /dev/null 2>&1
 #       cp -r $sysUpdated  /sys   > /dev/null 2>&1
#	cp -r $tmpUpdated  /tmp   > /dev/null 2>&1
 #       cp -r $varUpdated  /var   > /dev/null 2>&1
#	cp -r $binUpdated  /bin   > /dev/null 2>&1
 #       cp -r $bootUpdated /boot  > /dev/null 2>&1
#	cp -r $devUpdated  /dev   > /dev/null 2>&1
#        cp -r $etcUpdated  /etc   > /dev/null 2>&1

	#Nettoyage
	echo ":: Nettoyage en cours"
#	rm -rf /etc/cydramanager
}


subcommand=$1
case $subcommand in

                          "")
        send_to_help
        ;;

    "-Vm" | "--moreinfo" | "-moreinfo")
        more_info
        ;;

    "-help" | "-h" | "--help")
        sub_help
        ;;

    "-V" | "-version" | "--version")
        sub_version
        ;;

    "-u" | "-update" | "--update")
        update
        ;;

    "-uv" | "-update-verbose" | "--updateverbose")
        debug="yes"
        update
        ;;

    "-i" | "-install" | "--install")
        install
        ;;
    *)
        shift
        sub_${subcommand} $@
        if [ $? = 127 ]; then
            echo "Erreur: '$subcommand' n'éxiste pas ou n'est pas reconnu." >&2
            echo "       Lancez 'cydramanager --help' pour avoir la liste des commandes" >&2
            exit 1
        fi
        ;;
esac
